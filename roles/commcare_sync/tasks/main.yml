---

- name: Test
  command: echo it works!

# Swap

- include_tasks: create_swap_file.yml
  when: swap_file_enabled
  tags: swap


# Packages

- name: Install security updates.
  apt:
    default_release: "{{ ansible_distribution_release }}-security"
    update_cache: "{{ apt_update_cache }}"
    upgrade: dist
  tags:
    - packages
    - packages.security
    - skip_ansible_lint
  when: env != 'dev'

- name: Install base packages.
  apt:
    name:
      - locales
      - build-essential
      - acl
      - ntp
      - htop
      - git
      - vim
      - screen
      - curl
      - "{{ base_python_package }}-distutils"
      - "{{ base_python_package }}-pip"
      - "i{{ base_python_package }}"
      - supervisor
      - libpq-dev
    update_cache: "{{ apt_update_cache }}"
    state: present
  tags:
    - packages
    - skip_ansible_lint

- name: Upgrade pip.
  pip:
    name: pip
    state: latest
    executable: pip3
  tags:
    - packages
    - skip_ansible_lint


# Python

- include_tasks: python.yml
  tags: python


# Users & Groups

- name: Create the app group.
  group:
    name: "{{ app_group }}"
    system: yes
    state: present

- name: Create the app user.
  user:
    name: "{{ app_user }}"
    group: "{{ app_group }}"
    shell: /bin/bash
    state: present

- name: Create {{ base_dir }} folder.
  file:
    path: "{{ base_dir }}"
    group: "{{ app_group }}"
    mode: 0755
    state: directory

- name: Create user .bash_aliases file.
  template:
    src: system/bash_aliases_script.sh.j2
    dest: "{{ home_dir }}/.bash_aliases"
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    mode: 0740
    backup: yes
  tags: deploy


# Database

- include_tasks: postgres.yml
  tags: postgres


# Redis

- include_tasks: redis.yml
  tags: redis


# Django

- include_tasks: django.yml
  tags:
    - django
    - deploy
    - supervisor


# NGINX

- include_tasks: nginx.yml
  tags: nginx


- include_tasks: letsencrypt_cert.yml
  tags: letsencrypt
  when: env != 'dev'

# Superset

- include_tasks: superset.yml
  when: "{{ superset_enabled }}"
  tags:
    - superset

...
